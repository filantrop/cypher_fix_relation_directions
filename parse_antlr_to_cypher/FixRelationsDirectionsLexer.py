# Generated from .\parse_antlr_to_cypher\FixRelationsDirections.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,25,179,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,5,1,64,8,1,10,1,12,1,67,
        9,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,5,2,78,8,2,10,2,12,2,81,
        9,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,
        1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,
        1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,5,20,122,
        8,20,10,20,12,20,125,9,20,3,20,127,8,20,1,21,1,21,5,21,131,8,21,
        10,21,12,21,134,9,21,1,21,1,21,1,21,5,21,139,8,21,10,21,12,21,142,
        9,21,1,21,3,21,145,8,21,1,22,1,22,1,22,1,22,5,22,151,8,22,10,22,
        12,22,154,9,22,1,22,1,22,1,23,1,23,1,24,1,24,3,24,162,8,24,1,25,
        1,25,5,25,166,8,25,10,25,12,25,169,9,25,1,25,3,25,172,8,25,1,26,
        1,26,1,26,1,26,3,26,178,8,26,1,65,0,27,1,1,3,2,5,3,7,4,9,5,11,6,
        13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,
        18,37,19,39,20,41,21,43,22,45,23,47,24,49,0,51,0,53,25,1,0,12,3,
        0,9,10,13,13,32,32,2,0,10,10,13,13,1,0,39,39,1,0,34,34,1,0,96,96,
        1,0,48,57,1,0,49,57,2,0,48,57,95,95,3,0,65,90,95,95,97,122,2,0,0,
        127,55296,56319,1,0,55296,56319,1,0,56320,57343,190,0,1,1,0,0,0,
        0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
        1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
        1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
        1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,
        1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,53,1,0,0,0,1,55,1,0,0,0,3,59,
        1,0,0,0,5,73,1,0,0,0,7,84,1,0,0,0,9,86,1,0,0,0,11,88,1,0,0,0,13,
        90,1,0,0,0,15,92,1,0,0,0,17,94,1,0,0,0,19,96,1,0,0,0,21,98,1,0,0,
        0,23,100,1,0,0,0,25,102,1,0,0,0,27,104,1,0,0,0,29,106,1,0,0,0,31,
        108,1,0,0,0,33,110,1,0,0,0,35,112,1,0,0,0,37,114,1,0,0,0,39,116,
        1,0,0,0,41,126,1,0,0,0,43,144,1,0,0,0,45,146,1,0,0,0,47,157,1,0,
        0,0,49,161,1,0,0,0,51,163,1,0,0,0,53,177,1,0,0,0,55,56,7,0,0,0,56,
        57,1,0,0,0,57,58,6,0,0,0,58,2,1,0,0,0,59,60,5,47,0,0,60,61,5,42,
        0,0,61,65,1,0,0,0,62,64,9,0,0,0,63,62,1,0,0,0,64,67,1,0,0,0,65,66,
        1,0,0,0,65,63,1,0,0,0,66,68,1,0,0,0,67,65,1,0,0,0,68,69,5,42,0,0,
        69,70,5,47,0,0,70,71,1,0,0,0,71,72,6,1,0,0,72,4,1,0,0,0,73,74,5,
        47,0,0,74,75,5,47,0,0,75,79,1,0,0,0,76,78,8,1,0,0,77,76,1,0,0,0,
        78,81,1,0,0,0,79,77,1,0,0,0,79,80,1,0,0,0,80,82,1,0,0,0,81,79,1,
        0,0,0,82,83,6,2,0,0,83,6,1,0,0,0,84,85,5,40,0,0,85,8,1,0,0,0,86,
        87,5,41,0,0,87,10,1,0,0,0,88,89,5,91,0,0,89,12,1,0,0,0,90,91,5,93,
        0,0,91,14,1,0,0,0,92,93,5,123,0,0,93,16,1,0,0,0,94,95,5,125,0,0,
        95,18,1,0,0,0,96,97,5,62,0,0,97,20,1,0,0,0,98,99,5,60,0,0,99,22,
        1,0,0,0,100,101,5,58,0,0,101,24,1,0,0,0,102,103,5,45,0,0,103,26,
        1,0,0,0,104,105,5,46,0,0,105,28,1,0,0,0,106,107,5,44,0,0,107,30,
        1,0,0,0,108,109,5,43,0,0,109,32,1,0,0,0,110,111,5,47,0,0,111,34,
        1,0,0,0,112,113,5,42,0,0,113,36,1,0,0,0,114,115,5,33,0,0,115,38,
        1,0,0,0,116,117,5,124,0,0,117,40,1,0,0,0,118,127,3,45,22,0,119,123,
        3,53,26,0,120,122,3,49,24,0,121,120,1,0,0,0,122,125,1,0,0,0,123,
        121,1,0,0,0,123,124,1,0,0,0,124,127,1,0,0,0,125,123,1,0,0,0,126,
        118,1,0,0,0,126,119,1,0,0,0,127,42,1,0,0,0,128,132,5,39,0,0,129,
        131,8,2,0,0,130,129,1,0,0,0,131,134,1,0,0,0,132,130,1,0,0,0,132,
        133,1,0,0,0,133,135,1,0,0,0,134,132,1,0,0,0,135,145,5,39,0,0,136,
        140,5,34,0,0,137,139,8,3,0,0,138,137,1,0,0,0,139,142,1,0,0,0,140,
        138,1,0,0,0,140,141,1,0,0,0,141,143,1,0,0,0,142,140,1,0,0,0,143,
        145,5,34,0,0,144,128,1,0,0,0,144,136,1,0,0,0,145,44,1,0,0,0,146,
        152,5,96,0,0,147,148,5,96,0,0,148,151,5,96,0,0,149,151,8,4,0,0,150,
        147,1,0,0,0,150,149,1,0,0,0,151,154,1,0,0,0,152,150,1,0,0,0,152,
        153,1,0,0,0,153,155,1,0,0,0,154,152,1,0,0,0,155,156,5,96,0,0,156,
        46,1,0,0,0,157,158,3,51,25,0,158,48,1,0,0,0,159,162,3,53,26,0,160,
        162,7,5,0,0,161,159,1,0,0,0,161,160,1,0,0,0,162,50,1,0,0,0,163,171,
        7,6,0,0,164,166,7,7,0,0,165,164,1,0,0,0,166,169,1,0,0,0,167,165,
        1,0,0,0,167,168,1,0,0,0,168,170,1,0,0,0,169,167,1,0,0,0,170,172,
        7,5,0,0,171,167,1,0,0,0,171,172,1,0,0,0,172,52,1,0,0,0,173,178,7,
        8,0,0,174,178,8,9,0,0,175,176,7,10,0,0,176,178,7,11,0,0,177,173,
        1,0,0,0,177,174,1,0,0,0,177,175,1,0,0,0,178,54,1,0,0,0,14,0,65,79,
        123,126,132,140,144,150,152,161,167,171,177,1,6,0,0
    ]

class FixRelationsDirectionsLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    WS = 1
    COMMENT = 2
    LINE_COMMENT = 3
    LPAREN = 4
    RPAREN = 5
    LBRACK = 6
    RBRACK = 7
    LBRACE = 8
    RBRACE = 9
    GT = 10
    LT = 11
    COLON = 12
    SUB = 13
    DOT = 14
    COMMA = 15
    PLUS = 16
    DIV = 17
    MULT = 18
    NEGATION = 19
    STICK = 20
    NAME = 21
    STRING = 22
    BACKTICK_STRING = 23
    VARIABLE_LENGTH_DIGITS = 24
    Letter = 25

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "'['", "']'", "'{'", "'}'", "'>'", "'<'", "':'", 
            "'-'", "'.'", "','", "'+'", "'/'", "'*'", "'!'", "'|'" ]

    symbolicNames = [ "<INVALID>",
            "WS", "COMMENT", "LINE_COMMENT", "LPAREN", "RPAREN", "LBRACK", 
            "RBRACK", "LBRACE", "RBRACE", "GT", "LT", "COLON", "SUB", "DOT", 
            "COMMA", "PLUS", "DIV", "MULT", "NEGATION", "STICK", "NAME", 
            "STRING", "BACKTICK_STRING", "VARIABLE_LENGTH_DIGITS", "Letter" ]

    ruleNames = [ "WS", "COMMENT", "LINE_COMMENT", "LPAREN", "RPAREN", "LBRACK", 
                  "RBRACK", "LBRACE", "RBRACE", "GT", "LT", "COLON", "SUB", 
                  "DOT", "COMMA", "PLUS", "DIV", "MULT", "NEGATION", "STICK", 
                  "NAME", "STRING", "BACKTICK_STRING", "VARIABLE_LENGTH_DIGITS", 
                  "LetterOrDigit", "Digits", "Letter" ]

    grammarFileName = "FixRelationsDirections.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


